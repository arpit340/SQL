USE [cage_inventory]
GO
/****** Object:  UserDefinedFunction [dbo].[ufnGetShiftName]    Script Date: 11/11/2019 3:06:02 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetShiftName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[ufnGetShiftName]
GO
/****** Object:  UserDefinedFunction [dbo].[ufnGetShiftId]    Script Date: 11/11/2019 3:06:02 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetShiftId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[ufnGetShiftId]
GO
/****** Object:  StoredProcedure [dbo].[p_rpt_TableGames]    Script Date: 11/11/2019 3:06:02 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[p_rpt_TableGames]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[p_rpt_TableGames]
GO
/****** Object:  UserDefinedTableType [dbo].[SHIFT_REF_TYPE]    Script Date: 11/11/2019 3:06:02 AM ******/
IF  EXISTS (SELECT * FROM sys.types st JOIN sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'SHIFT_REF_TYPE' AND ss.name = N'dbo')
DROP TYPE [dbo].[SHIFT_REF_TYPE]
GO
/****** Object:  UserDefinedTableType [dbo].[SHIFT_REF_TYPE]    Script Date: 11/11/2019 3:06:02 AM ******/
IF NOT EXISTS (SELECT * FROM sys.types st JOIN sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'SHIFT_REF_TYPE' AND ss.name = N'dbo')
CREATE TYPE [dbo].[SHIFT_REF_TYPE] AS TABLE(
	[SHIFT_ID] [int] NULL,
	[SHIFT_NM] [char](30) NULL,
	[START_TIME] [time](0) NULL,
	[END_TIME] [time](0) NULL
)
GO
/****** Object:  StoredProcedure [dbo].[p_rpt_TableGames]    Script Date: 11/11/2019 3:06:02 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[p_rpt_TableGames]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[p_rpt_TableGames]
	@RECEIPT_SOURCE_ID INT = NULL,
	@START_DATE DATE,	
	@START_SHIFT INT,
	@END_DATE DATE,
	@END_SHIFT INT,
	--@GLNum Varchar(24) = NULL
	@COMPANY INT = NULL,
	@ACCOUNT_UNIT INT = NULL,
	@ACCOUNT INT = NULL,
	@SUB_ACCOUNT INT = NULL,
	@ACTIVITY NVARCHAR(15) = NULL,
	@ACCOUNT_CATEGORY NVARCHAR(15) = NULL
	
AS
/*********************************************************************************************************
**										Viejas Enterprises												**
**********************************************************************************************************
**
** Project		CCIS
** Database		CAGE_INVENTORY
** Object		p_rpt_TableGames
** Description	Used to get Table Games Report
**				
** ----------------
** Revision History
** ----------------
** Date				Version		Author  	Description
** --------			-------		--------	-----------
** 11/11/2019		1.0			Newgen 		Initial version
** 
**
*********************************************************************************************************/
SET NOCOUNT ON
	BEGIN
		
		DECLARE @StaticGL TABLE (RECEIPT_SOURCE_ID INT PRIMARY KEY, GL_NUM VARCHAR(24))
		DECLARE @ANCGL TABLE (GL_NUM_ID INT PRIMARY KEY, GL_NUM VARCHAR(24))	
		DECLARE @SHIFT_REF_TYPE SHIFT_REF_TYPE	

	INSERT	@StaticGL
		SELECT	glnr.SUB_SHIFT_ACCOUNTABILITY_ID AS RECEIPT_SOURCE_ID
			,	RIGHT(''00''+ CONVERT(VARCHAR, ISNULL(glnr.COMPANY, '''')),2)
				+	RIGHT(''0000''+ CONVERT(VARCHAR, ISNULL(glnr.ACCOUNT_UNIT, '''')),4)
				+	RIGHT(''0000''+ CONVERT(VARCHAR, ISNULL(glnr.ACCOUNT, '''')),4)
				+	RIGHT(''0000''+ CONVERT(VARCHAR, ISNULL(glnr.SUB_ACCOUNT, '''')),4)
				+	ISNULL(glnr.ACTIVITY, ''0'')
				+	ISNULL(glnr.ACCOUNT_CATEGORY, ''0'') 
				AS GL_NUM
		FROM	dbo.GENERAL_LEDGER_NUM_REF glnr	WITH(NOLOCK)
		WHERE	glnr.SHIFT_ACCOUNTABILITY_ID = 34 -- Receipts								
				AND glnr.CATEGORY_ID IS NULL 
				AND glnr.SUB_CATEGORY_ID IS NULL
				AND glnr.IS_ACTIVE = 1				 
				AND ISNULL(glnr.COMPANY, -99) = ISNULL(ISNULL(@COMPANY, glnr.COMPANY), -99) 			-- max two char allowed	
				AND ISNULL(glnr.ACCOUNT_UNIT, -9999) = ISNULL(ISNULL(@ACCOUNT_UNIT, glnr.ACCOUNT_UNIT), -9999)	-- max four char allowed
				AND ISNULL(glnr.ACCOUNT, -9999) = ISNULL(ISNULL(@ACCOUNT, glnr.ACCOUNT), -9999)	-- max four char allowed
				AND ISNULL(glnr.SUB_ACCOUNT, -9999) = ISNULL(ISNULL(@SUB_ACCOUNT, glnr.SUB_ACCOUNT), -9999)	-- max four char allowed
				AND ISNULL(glnr.ACTIVITY, ''0'') = ISNULL(ISNULL(@ACTIVITY, glnr.ACTIVITY), ''0'')	
				AND ISNULL(glnr.ACCOUNT_CATEGORY, ''0'') = ISNULL(ISNULL(@ACCOUNT_CATEGORY, glnr.ACCOUNT_CATEGORY), ''0'')						
		
		INSERT	@ANCGL
		SELECT	aglnr.GL_NUM_ID, aglnr.GL_NUM
		FROM	dbo.ANC_GENERAL_LEDGER_NUM_REF aglnr WITH(NOLOCK)
		WHERE	ISNULL(aglnr.COMPANY, -99) = ISNULL(ISNULL(@COMPANY, aglnr.COMPANY), -99) 			-- max two char allowed	
				AND ISNULL(aglnr.ACCOUNT_UNIT, -9999) = ISNULL(ISNULL(@ACCOUNT_UNIT, aglnr.ACCOUNT_UNIT), -9999)	-- max four char allowed
				AND ISNULL(aglnr.ACCOUNT, -9999) = ISNULL(ISNULL(@ACCOUNT, aglnr.ACCOUNT), -9999)	-- max four char allowed
				AND ISNULL(aglnr.SUB_ACCOUNT, -9999) = ISNULL(ISNULL(@SUB_ACCOUNT, aglnr.SUB_ACCOUNT), -9999)	-- max four char allowed
				AND ISNULL(aglnr.ACTIVITY, ''0'') = ISNULL(ISNULL(@ACTIVITY, aglnr.ACTIVITY), ''0'')	
				AND ISNULL(aglnr.ACCOUNT_CATEGORY, ''0'') = ISNULL(ISNULL(@ACCOUNT_CATEGORY, aglnr.ACCOUNT_CATEGORY), ''0'')	
									
		INSERT INTO @SHIFT_REF_TYPE SELECT * FROM SHIFT_REF 

		SELECT 
				RVD.RECEIPT_VOUCHER_DETAIL_ID,
				rsf.RECEIPT_SOURCE_NM,
				dbo.ufnGETShiftNAme(@SHIFT_REF_TYPE,rvd.RECEIPT_DT) AS [SHIFT],
				--dbo.ufnGetShiftId(@SHIFT_REF_TYPE,rvd.RECEIPT_DT) AS [SHIFTID],
				--LTRIM(RTRIM(l.LOCATION_NM)) AS RECEIPT_LOCATION_NM,
				rvd.VOUCHER_NUM,
				depart.DEPARTMENT_NM,
				(RTRIM(LTRIM(rvd.RECEIVED_FROM_TM_FIRST_NAME)) + '' '' + RTRIM(LTRIM(rvd.RECEIVED_FROM_TM_LAST_NAME))) + '' #'' + CONVERT(varchar, rvd.TM_NUM)
				AS RECEIVED_FROM_TM_NAME,
				--rvd.TM_NUM as RECEIVED_FROM_TM_NUM,
				rvd.RECEIPT_DT,
				rvd.TABLE_TIP_TOTAL_AMOUNT AS TIP_TOTAL,
				rvd.TABLE_TIP_OUT_AMOUNT AS TIP_OUT_TOTAL,
				rvd.AMOUNT AS PAYROLL_TIP_TOTAL,
				rvd.TABLE_TIP_TAKE_HOME_AMOUNT AS TIP_TAKE_HOME	
				--rvd.RECEIVED_BY_TM_NUM,
				--ISNULL(glnr.GL_NUM, aglnr.GL_NUM) AS GL_NUM,
				--rvd.COMMENTS

		FROM	dbo.[RECEIPT_VOUCHER_DETAIL] rvd WITH(NOLOCK)
		JOIN	dbo.SHIFT_ACCOUNTABILITY_DETAIL sad WITH(NOLOCK) ON rvd.RECEIPT_SHIFTACCOUNTABILITY_DETAIL_ID = sad.SHIFT_ACCOUNTABILITY_DETAIL_ID 
				AND sad.IS_DELETED = 0
		LEFT JOIN  @StaticGL glnr ON rvd.RECEIPT_SOURCE_ID = glnr.RECEIPT_SOURCE_ID
		LEFT JOIN  @ANCGL aglnr ON rvd.GL_NUM_ID = aglnr.GL_NUM_ID
		LEFT JOIN  RECEIPT_SOURCES_REF rsf ON rvd.RECEIPT_SOURCE_ID = rsf.RECEIPT_SOURCE_ID
		LEFT JOIN  DEPARTMENT depart ON rsf.DEPARTMENT_ID = depart.DEPARTMENT_ID
		
		WHERE	((@RECEIPT_SOURCE_ID IS NULL AND RVD.RECEIPT_SOURCE_ID IN (58,59)) OR rvd.RECEIPT_SOURCE_ID = @RECEIPT_SOURCE_ID)
				AND (
						@COMPANY IS NULL AND @ACCOUNT_UNIT IS NULL AND @ACCOUNT IS NULL AND @SUB_ACCOUNT IS NULL AND @ACTIVITY IS NULL AND @ACCOUNT_CATEGORY IS NULL
						OR
						(glnr.GL_NUM IS NOT NULL OR aglnr.GL_NUM IS NOT NULL)
					)
				AND rvd.IS_DELETED = 0
				AND Convert(DATE,rvd.RECEIPT_DT) >= @START_DATE 	
				AND Convert(DATE,rvd.RECEIPT_DT) <= @END_DATE
				--AND [SHIFTID]dbo.ufnGetShiftId(@SHIFT_REF_TYPE,rvd.RECEIPT_DT)
				AND ((@START_DATE = @END_DATE AND ((@START_SHIFT IN (-1,3) AND ((@END_SHIFT IN (-1,2) AND Convert(DATE,rvd.RECEIPT_DT) = @START_DATE)
																					 OR ((@END_SHIFT = 1 AND dbo.ufnGetShiftId(@SHIFT_REF_TYPE,rvd.RECEIPT_DT) IN (1,3) AND Convert(DATE,rvd.RECEIPT_DT) = @START_DATE))
																					 OR ((@END_SHIFT = 3 AND dbo.ufnGetShiftId(@SHIFT_REF_TYPE,rvd.RECEIPT_DT) = 3 AND Convert(DATE,rvd.RECEIPT_DT) = @START_DATE))
																					)
														 OR (@START_SHIFT = 1 AND ((@END_SHIFT IN (-1,2) AND rvd.RECEIPT_DT IN (1,2) AND Convert(DATE,rvd.RECEIPT_DT) = @START_DATE)
																					 OR (@END_SHIFT IN (1,3) AND dbo.ufnGetShiftId(@SHIFT_REF_TYPE,rvd.RECEIPT_DT) = 1 AND Convert(DATE,rvd.RECEIPT_DT) = @START_DATE)																 
																					)
															)
														 OR (@START_SHIFT = 2 AND dbo.ufnGetShiftId(@SHIFT_REF_TYPE,rvd.RECEIPT_DT) = 2 AND Convert(DATE,rvd.RECEIPT_DT) = @START_DATE)
														 )
													)			
						)
					 OR 
						(@START_DATE <> @END_DATE AND ((rvd.RECEIPT_DT <> @START_DATE AND rvd.RECEIPT_DT <> @END_DATE AND rvd.RECEIPT_DT BETWEEN @START_DATE AND @END_DATE)
														OR (rvd.RECEIPT_DT = @START_DATE AND ((@START_SHIFT IN (-1 , 3) AND rvd.RECEIPT_DT = @START_DATE) 
																							OR (@START_SHIFT = 1 AND dbo.ufnGetShiftId(@SHIFT_REF_TYPE,rvd.RECEIPT_DT) IN (1,2) AND Convert(DATE,rvd.RECEIPT_DT) = @START_DATE)
																							OR (@START_SHIFT = 2 AND dbo.ufnGetShiftId(@SHIFT_REF_TYPE,rvd.RECEIPT_DT) = 2 AND Convert(DATE,rvd.RECEIPT_DT) = @START_DATE)
																							)
															)
														OR (rvd.RECEIPT_DT = @END_DATE AND ((@END_SHIFT IN (-1,2) AND rvd.RECEIPT_DT = @END_DATE)
																						  OR (@END_SHIFT = 1 AND dbo.ufnGetShiftId(@SHIFT_REF_TYPE,rvd.RECEIPT_DT) IN (1,3) AND Convert(DATE,rvd.RECEIPT_DT) = @END_DATE)
																						  OR (@END_SHIFT = 3 AND dbo.ufnGetShiftId(@SHIFT_REF_TYPE,rvd.RECEIPT_DT) = 3 AND Convert(DATE,rvd.RECEIPT_DT) = @END_DATE)
																						  )
															)
													  )
						)
				)		
			
		ORDER BY rvd.RECEIPT_DT
	END
' 
END
GO
/****** Object:  UserDefinedFunction [dbo].[ufnGetShiftId]    Script Date: 11/11/2019 3:06:02 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetShiftId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[ufnGetShiftId](
@SHIFT_REF_TYPE SHIFT_REF_TYPE readonly,
@GLDATE DATETIME
)  
RETURNS int   
AS   
-- Returns the stock level for the product.  
-- EXECUTE AS follows :
--
BEGIN  

   DECLARE @SHIFTID int
   DECLARE @CURRENTDATE DATETIME

IF(@GLDate IS NULL)
SET @CURRENTDATE = GETDATE()
ELSE
SET @CURRENTDATE = @GLDate

DECLARE @MAX_SHIFT_ST_TIME TIME = ''23:59:59''
DECLARE @RETURN_VALUE SHIFT_REF_TYPE
  
SET @GLDATE= CAST(@CURRENTDATE AS DATE)

SELECT @MAX_SHIFT_ST_TIME = MAX(START_TIME) FROM @SHIFT_REF_TYPE

SELECT @SHIFTID = SHIFT_ID FROM @SHIFT_REF_TYPE sr WHERE CAST(@CURRENTDATE AS TIME) >= CAST(sr.START_TIME AS TIME) AND CAST(@CURRENTDATE AS TIME) <= CAST(sr.END_TIME AS TIME)

IF (@SHIFTID IS NULL)
	BEGIN
	IF(CAST(@CURRENTDATE AS TIME) <= ''23:59:59'' AND CAST(@CURRENTDATE AS TIME) >= @MAX_SHIFT_ST_TIME)
		BEGIN
		SET @GLDATE = CAST(@CURRENTDATE AS DATE)
		SET @GLDATE = CAST(DATEADD(HOUR,23,@GLDATE) AS DATETIME)
		SET @GLDATE = CAST(DATEADD(MINUTE,59,@GLDATE) AS DATETIME)
		SET @GLDATE = CAST(DATEADD(SECOND,59,@GLDATE) AS DATETIME)
		
		SELECT @SHIFTID = SHIFT_ID FROM @SHIFT_REF_TYPE sr WHERE CAST(@CURRENTDATE AS TIME) >= CAST(START_TIME AS TIME) AND CAST(@CURRENTDATE AS TIME) <= CAST(@GLDATE AS TIME)
		
		END
	ELSE 
		BEGIN	
		SET @GLDATE= CAST(@CURRENTDATE AS DATE)
		SET @GLDATE = CAST(DATEADD(DAY,-1,@GLDATE) AS DATE)

		SELECT @SHIFTID = SHIFT_ID FROM @SHIFT_REF_TYPE WHERE CAST(@CURRENTDATE AS TIME) >= CAST(@GLDATE AS TIME) AND CAST(@CURRENTDATE AS TIME) <= CAST(END_TIME AS TIME)
		END
	END

RETURN @SHIFTID;

END; 





' 
END

GO
/****** Object:  UserDefinedFunction [dbo].[ufnGetShiftName]    Script Date: 11/11/2019 3:06:02 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufnGetShiftName]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[ufnGetShiftName](
@SHIFT_REF_TYPE SHIFT_REF_TYPE readonly,
@GLDATE DATETIME
)  
RETURNS VARCHAR(10)   
AS   
-- Returns the stock level for the product.  
-- EXECUTE AS follows :
--
BEGIN  

   DECLARE @SHIFTNAME NVARCHAR(10)
   DECLARE @CURRENTDATE DATETIME

IF(@GLDate IS NULL)
SET @CURRENTDATE = GETDATE()
ELSE
SET @CURRENTDATE = @GLDate

DECLARE @MAX_SHIFT_ST_TIME TIME = ''23:59:59''
DECLARE @RETURN_VALUE SHIFT_REF_TYPE
  
SET @GLDATE= CAST(@CURRENTDATE AS DATE)

SELECT @MAX_SHIFT_ST_TIME = MAX(START_TIME) FROM @SHIFT_REF_TYPE

SELECT @SHIFTNAME = SHIFT_NM FROM @SHIFT_REF_TYPE sr WHERE CAST(@CURRENTDATE AS TIME) >= CAST(sr.START_TIME AS TIME) AND CAST(@CURRENTDATE AS TIME) <= CAST(sr.END_TIME AS TIME)

IF (@SHIFTNAME IS NULL)
	BEGIN
	IF(CAST(@CURRENTDATE AS TIME) <= ''23:59:59'' AND CAST(@CURRENTDATE AS TIME) >= @MAX_SHIFT_ST_TIME)
		BEGIN
		SET @GLDATE = CAST(@CURRENTDATE AS DATE)
		SET @GLDATE = CAST(DATEADD(HOUR,23,@GLDATE) AS DATETIME)
		SET @GLDATE = CAST(DATEADD(MINUTE,59,@GLDATE) AS DATETIME)
		SET @GLDATE = CAST(DATEADD(SECOND,59,@GLDATE) AS DATETIME)
		
		SELECT @SHIFTNAME = SHIFT_NM FROM @SHIFT_REF_TYPE sr WHERE CAST(@CURRENTDATE AS TIME) >= CAST(START_TIME AS TIME) AND CAST(@CURRENTDATE AS TIME) <= CAST(@GLDATE AS TIME)
		
		END
	ELSE 
		BEGIN	
		SET @GLDATE= CAST(@CURRENTDATE AS DATE)
		SET @GLDATE = CAST(DATEADD(DAY,-1,@GLDATE) AS DATE)

		SELECT @SHIFTNAME = SHIFT_NM FROM @SHIFT_REF_TYPE WHERE CAST(@CURRENTDATE AS TIME) >= CAST(@GLDATE AS TIME) AND CAST(@CURRENTDATE AS TIME) <= CAST(END_TIME AS TIME)
		END
	END
--SET @GLDATE= CAST(@GLDATE AS DATE)
--SELECT @GLSHIFT=SUBSTRING(@SHIFTNAME,1,1)

RETURN @SHIFTNAME;

END; ' 
END

GO
